// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class NumberAdded extends ethereum.Event {
  get params(): NumberAdded__Params {
    return new NumberAdded__Params(this);
  }
}

export class NumberAdded__Params {
  _event: NumberAdded;

  constructor(event: NumberAdded) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NumberSubtracted extends ethereum.Event {
  get params(): NumberSubtracted__Params {
    return new NumberSubtracted__Params(this);
  }
}

export class NumberSubtracted__Params {
  _event: NumberSubtracted;

  constructor(event: NumberSubtracted) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NumberContract extends ethereum.SmartContract {
  static bind(address: Address): NumberContract {
    return new NumberContract("NumberContract", address);
  }

  number(): BigInt {
    let result = super.call("number", "number():(uint256)", []);

    return result[0].toBigInt();
  }

  try_number(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("number", "number():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddCall extends ethereum.Call {
  get inputs(): AddCall__Inputs {
    return new AddCall__Inputs(this);
  }

  get outputs(): AddCall__Outputs {
    return new AddCall__Outputs(this);
  }
}

export class AddCall__Inputs {
  _call: AddCall;

  constructor(call: AddCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddCall__Outputs {
  _call: AddCall;

  constructor(call: AddCall) {
    this._call = call;
  }
}

export class SubtractCall extends ethereum.Call {
  get inputs(): SubtractCall__Inputs {
    return new SubtractCall__Inputs(this);
  }

  get outputs(): SubtractCall__Outputs {
    return new SubtractCall__Outputs(this);
  }
}

export class SubtractCall__Inputs {
  _call: SubtractCall;

  constructor(call: SubtractCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SubtractCall__Outputs {
  _call: SubtractCall;

  constructor(call: SubtractCall) {
    this._call = call;
  }
}
